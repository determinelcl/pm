server.servlet.context-path=/practice
server.port=8088

# 数据库连接配置
# 前两条配置用于打印输出带参数的sql语句
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/pm_v1?useUnicode=true&characterEncoding=utf8
spring.datasource.username=root
spring.datasource.password=123456
mybatis.configuration.cache-enabled=false
mybatis.configuration.map-underscore-to-camel-case=true
mybatis.configuration.use-generated-keys=true
mybatis.configuration.default-executor-type=reuse
# 设置事务的超时时间
mybatis.configuration.default-statement-timeout=600


# 阿里druid数据源
# 最大连接数
spring.datasource.maxActive=30
# 最小连接数
spring.datasource.minIdle=5
# 获取连接的最大等待时间
spring.datasource.maxWait=10000
# 解决mysql8小时的问题
spring.datasource.validationQuery=query 'x'
# 空闲连接检查时间间隔
spring.datasource.timeBetweenEvictionRunsMills=60000
# 空闲连接最小空闲时间
spring.datasource.minEvictableIdleTimeMills=300000

# 请求头参数
jwt.header=Authorization
# 请求头参数值前缀
jwt.tokenHead=Bearer
# jwt签名所用的密钥
jwt.secret=#y5S-@GzS-!8YG
# jwt token的过期设置时间，
jwt.expiration=604800

# 开启权限认证的开关
auth.restful.enable=true

## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB

## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
file.upload-dir=./upload-files